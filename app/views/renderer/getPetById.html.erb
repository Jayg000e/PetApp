<!DOCTYPE html>
<html>
<head>
    <title>AJAX Example</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <%# <script>var exports = {};</script> %>
    <%# <script src="https://cdn.jsdelivr.net/npm/openai@4.11.1/index.min.js"></script> %>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>
    <div class="container mt-4">
        <div id="my-container"></div>

        <button id="generateButton">
            <img src="/images/question.png" alt="">
            Check how well you know your pet!
        </button>
        <div id="loadingMessage" style="display: none;">Waiting for data, please be patient...</div>
        <div id="responseContainer">
            <div id="questions" style="display: none;"></div>
            <button id="answerButton" style="display: none;">
                <img src="/images/answer.png" alt="">
                View the answers
            </button>
            <div id="answers" style="display: none;"></div>
        </div>
    </div>
    
    <script>
        var petData;
        var petid = <%= @petid %>;
        var apiKey = "<%= @apiKey %>";

        var BASE_URL = "<%= request.base_url %>";
        $(document).ready(function() {
            $.ajax({
                url: BASE_URL+'/pets/' + petid, // Example URL
                method: 'GET',
                dataType: 'json', // Expect JSON response
                success: function(data) {
                    petData=data
                    $('#my-container').html(getPetHTML(data));
                },
                error: function() {
                    console.error('Error fetching data.');
                }
            });
        
            $('#generateButton').click(function() {
                
                $('#loadingMessage').show();

                // Define the API endpoint
                const apiUrl = 'https://api.openai.com/v1/chat/completions';

                // Define consversation
                const consversation = [
                    {"role": "system", "content": "Return the answer as a JSON object."},
                    {"role": "user", "content": `Ask me problems of ${petData.breed} and provide corresponding answer. Return an array of questions and an array of answers in a JSON object.`},
                ]

                // Data to send in the request
                const requestData = {
                    model: 'gpt-3.5-turbo',
                    messages: consversation,
                    temperature: 0.7
                };

                // Send the POST request to the OpenAI API
                $.ajax({
                    type: 'POST',
                    url: apiUrl,
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${apiKey}`
                    },
                    data: JSON.stringify(requestData),
                    success: function(data) {
                        $('#loadingMessage').hide();
                        
                        const responseContent = data.choices[0].message.content;
                        // Update the responseContainer with the response
                        // Parse the JSON response
                        const jsonResponse = JSON.parse(responseContent);

                        // Display each key separately
                        const questionsDiv = $('#questions');
                        const answersDiv = $('#answers');

                        questionsDiv.empty(); // Clear any previous content
                        answersDiv.empty(); // Clear any previous content

                        jsonResponse.questions.forEach((question, index) => {
                            const questionElement = $('<div>').text(`Question ${index + 1}: ${question}`);
                            questionsDiv.append(questionElement);
                        });

                        jsonResponse.answers.forEach((answer, index) => {
                            const answerElement = $('<div>').text(`Answer ${index + 1}: ${answer}`);
                            answersDiv.append(answerElement);
                        });

                        $('#questions').show()
                        $('#answerButton').show()
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                    }
                });
            });

            $('#answerButton').click(function(){
                $('#answers').show();
            })
        });

        function getPetHTML(val) {
            var petTemplate = [
                ' <div class="my-pet">',
                '     <div class="col-lg-11 item row">',
                '         <div class="col-lg-2 col-sm-5">',
                '             <img src="/images/' + (val.pet_type.toLowerCase() == 'dog' ? 'dog' : (val.pet_type.toLowerCase() == 'cat' ? 'cat' : 'others')) + '.png" alt="">',
                '         </div>', 
                '         <div class="col-lg-10 col-sm-7 content">',
                '             <h4>name: ' + val.name + '</h4>',
                '             <span>onsale: ' + val.onsale + '</span>',
                '             <span>created_at: ' + val.created_at + '</span>',
                '             <p>Meet ' + val.name + ', ' + val.description + '.</p>',
                '             <ul class="info">',
                '                 <li>pet_type: ' + val.pet_type + '</li>',
                '                 <li>breed: ' + val.breed + '</li>',
                '                 <li>birthdate: ' + val.birthdate + '</li>',
                '             </ul>',
                '         </div>',
                '     </div>',
                ' </div>',
            ]
            return petTemplate.join('');
        }

    </script>
        
    <style>
        button {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 20px;
            margin-top: 20px;
            margin-bottom: 20px;
            background: rgba(255, 255, 255, 0.8);
            color: #333;
            border: 3px solid #b98eff;
            border-radius: 10px;
            display: inline-block;
            font-size: 16px;
            font-weight: bold;
            transition: background 0.3s ease-in-out, color 0.3s ease-in-out, border-color 0.3s ease-in-out;
        }

        button img {
            width: 20px;
            height: 20px;
            margin-right: 10px;
        }

        button:hover {
            background: linear-gradient(to left, rgba(185, 142, 255, 0.8), rgba(225, 197, 255, 0.8));
            color: #333;
            border-color: #e1c5ff;
        }

        #loadingMessage {
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Adjust the margin as needed */
        }

        .container #responseContainer #questions, #answers {
            background-color: #f0f0f0; /* Light gray background */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */
            color: #333; /* Dark text color */
            font-size: 16px;
            line-height: 1.5;
            margin-bottom: 50px;
        } 

    </style>
</body>
</html>
